name: Build and Attach Bundle to Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Copy .mjs files to releases folder
        run: |
          mkdir -p releases
          if compgen -G "dist/**/*.mjs" > /dev/null || compgen -G "dist/*.mjs" > /dev/null; then
            find dist -type f -name "*.mjs" -exec cp -f {} releases/ \;
          elif compgen -G "dist/**/*.es.js" > /dev/null || compgen -G "dist/*.es.js" > /dev/null; then
            echo "No .mjs found; copying .es.js as .mjs"
            find dist -type f -name "*.es.js" | while read -r f; do
              base=$(basename "$f" .es.js)
              cp -f "$f" "releases/${base}.mjs"
            done
          else
            echo "No .mjs or .es.js files found in dist"
          fi

      - name: Archive dist
        run: |
          tar -czf webskel-dist-${{ github.event.release.tag_name }}.tar.gz dist
          zip -r webskel-dist-${{ github.event.release.tag_name }}.zip dist

      - name: Save bundles to releases folder in repo
        run: |
          mkdir -p releases
          cp -f webskel-dist-${{ github.event.release.tag_name }}.tar.gz releases/webskel-dist.tar.gz
          cp -f webskel-dist-${{ github.event.release.tag_name }}.zip releases/webskel-dist.zip

      - name: Commit and push updated bundles
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add releases webskel-dist-${{ github.event.release.tag_name }}.tar.gz webskel-dist-${{ github.event.release.tag_name }}.zip
          if git diff --cached --quiet; then
            echo "No bundle changes to commit"
          else
            git commit -m "chore(release): update bundles for ${{ github.event.release.tag_name }}"
            git push origin HEAD:${{ github.event.repository.default_branch }}
          fi

      - name: Upload assets to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            dist/**
            webskel-dist-${{ github.event.release.tag_name }}.tar.gz
            webskel-dist-${{ github.event.release.tag_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
